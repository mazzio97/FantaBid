/*
 * This file is generated by jOOQ.
 */
package org.fantabid.generated.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.fantabid.generated.Indexes;
import org.fantabid.generated.Keys;
import org.fantabid.generated.Public;
import org.fantabid.generated.tables.records.CalciatoreRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Calciatore extends TableImpl<CalciatoreRecord> {

    private static final long serialVersionUID = -1632721661;

    /**
     * The reference instance of <code>public.calciatore</code>
     */
    public static final Calciatore CALCIATORE = new Calciatore();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CalciatoreRecord> getRecordType() {
        return CalciatoreRecord.class;
    }

    /**
     * The column <code>public.calciatore.idcalciatore</code>.
     */
    public final TableField<CalciatoreRecord, Short> IDCALCIATORE = createField("idcalciatore", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>public.calciatore.nome</code>.
     */
    public final TableField<CalciatoreRecord, String> NOME = createField("nome", org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "");

    /**
     * The column <code>public.calciatore.squadra</code>.
     */
    public final TableField<CalciatoreRecord, String> SQUADRA = createField("squadra", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>public.calciatore.prezzostandard</code>.
     */
    public final TableField<CalciatoreRecord, Byte> PREZZOSTANDARD = createField("prezzostandard", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>public.calciatore.ruolo</code>.
     */
    public final TableField<CalciatoreRecord, String> RUOLO = createField("ruolo", org.jooq.impl.SQLDataType.CHAR(1).nullable(false), this, "");

    /**
     * Create a <code>public.calciatore</code> table reference
     */
    public Calciatore() {
        this(DSL.name("calciatore"), null);
    }

    /**
     * Create an aliased <code>public.calciatore</code> table reference
     */
    public Calciatore(String alias) {
        this(DSL.name(alias), CALCIATORE);
    }

    /**
     * Create an aliased <code>public.calciatore</code> table reference
     */
    public Calciatore(Name alias) {
        this(alias, CALCIATORE);
    }

    private Calciatore(Name alias, Table<CalciatoreRecord> aliased) {
        this(alias, aliased, null);
    }

    private Calciatore(Name alias, Table<CalciatoreRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Calciatore(Table<O> child, ForeignKey<O, CalciatoreRecord> key) {
        super(child, key, CALCIATORE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.IDCALCIATORE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CalciatoreRecord> getPrimaryKey() {
        return Keys.IDCALCIATORE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CalciatoreRecord>> getKeys() {
        return Arrays.<UniqueKey<CalciatoreRecord>>asList(Keys.IDCALCIATORE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Calciatore as(String alias) {
        return new Calciatore(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Calciatore as(Name alias) {
        return new Calciatore(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Calciatore rename(String name) {
        return new Calciatore(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Calciatore rename(Name name) {
        return new Calciatore(name, null);
    }
}

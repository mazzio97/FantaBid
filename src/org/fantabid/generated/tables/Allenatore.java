/*
 * This file is generated by jOOQ.
 */
package org.fantabid.generated.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.fantabid.generated.Indexes;
import org.fantabid.generated.Keys;
import org.fantabid.generated.Public;
import org.fantabid.generated.tables.records.AllenatoreRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Allenatore extends TableImpl<AllenatoreRecord> {

    private static final long serialVersionUID = 10640198;

    /**
     * The reference instance of <code>public.allenatore</code>
     */
    public static final Allenatore ALLENATORE = new Allenatore();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AllenatoreRecord> getRecordType() {
        return AllenatoreRecord.class;
    }

    /**
     * The column <code>public.allenatore.username</code>.
     */
    public final TableField<AllenatoreRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "");

    /**
     * The column <code>public.allenatore.password</code>.
     */
    public final TableField<AllenatoreRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "");

    /**
     * The column <code>public.allenatore.nome</code>.
     */
    public final TableField<AllenatoreRecord, String> NOME = createField("nome", org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "");

    /**
     * The column <code>public.allenatore.cognome</code>.
     */
    public final TableField<AllenatoreRecord, String> COGNOME = createField("cognome", org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "");

    /**
     * Create a <code>public.allenatore</code> table reference
     */
    public Allenatore() {
        this(DSL.name("allenatore"), null);
    }

    /**
     * Create an aliased <code>public.allenatore</code> table reference
     */
    public Allenatore(String alias) {
        this(DSL.name(alias), ALLENATORE);
    }

    /**
     * Create an aliased <code>public.allenatore</code> table reference
     */
    public Allenatore(Name alias) {
        this(alias, ALLENATORE);
    }

    private Allenatore(Name alias, Table<AllenatoreRecord> aliased) {
        this(alias, aliased, null);
    }

    private Allenatore(Name alias, Table<AllenatoreRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Allenatore(Table<O> child, ForeignKey<O, AllenatoreRecord> key) {
        super(child, key, ALLENATORE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.IDALLENATORE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AllenatoreRecord> getPrimaryKey() {
        return Keys.IDALLENATORE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AllenatoreRecord>> getKeys() {
        return Arrays.<UniqueKey<AllenatoreRecord>>asList(Keys.IDALLENATORE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Allenatore as(String alias) {
        return new Allenatore(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Allenatore as(Name alias) {
        return new Allenatore(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Allenatore rename(String name) {
        return new Allenatore(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Allenatore rename(Name name) {
        return new Allenatore(name, null);
    }
}

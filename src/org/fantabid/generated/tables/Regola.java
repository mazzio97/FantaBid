/*
 * This file is generated by jOOQ.
 */
package org.fantabid.generated.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.fantabid.generated.Indexes;
import org.fantabid.generated.Keys;
import org.fantabid.generated.Public;
import org.fantabid.generated.tables.records.RegolaRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Regola extends TableImpl<RegolaRecord> {

    private static final long serialVersionUID = 433813460;

    /**
     * The reference instance of <code>public.regola</code>
     */
    public static final Regola REGOLA = new Regola();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RegolaRecord> getRecordType() {
        return RegolaRecord.class;
    }

    /**
     * The column <code>public.regola.idregola</code>.
     */
    public final TableField<RegolaRecord, Short> IDREGOLA = createField("idregola", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>public.regola.nome</code>.
     */
    public final TableField<RegolaRecord, String> NOME = createField("nome", org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "");

    /**
     * The column <code>public.regola.descrizione</code>.
     */
    public final TableField<RegolaRecord, String> DESCRIZIONE = createField("descrizione", org.jooq.impl.SQLDataType.VARCHAR(140).nullable(false), this, "");

    /**
     * Create a <code>public.regola</code> table reference
     */
    public Regola() {
        this(DSL.name("regola"), null);
    }

    /**
     * Create an aliased <code>public.regola</code> table reference
     */
    public Regola(String alias) {
        this(DSL.name(alias), REGOLA);
    }

    /**
     * Create an aliased <code>public.regola</code> table reference
     */
    public Regola(Name alias) {
        this(alias, REGOLA);
    }

    private Regola(Name alias, Table<RegolaRecord> aliased) {
        this(alias, aliased, null);
    }

    private Regola(Name alias, Table<RegolaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Regola(Table<O> child, ForeignKey<O, RegolaRecord> key) {
        super(child, key, REGOLA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.IDREGOLA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RegolaRecord> getPrimaryKey() {
        return Keys.IDREGOLA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RegolaRecord>> getKeys() {
        return Arrays.<UniqueKey<RegolaRecord>>asList(Keys.IDREGOLA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Regola as(String alias) {
        return new Regola(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Regola as(Name alias) {
        return new Regola(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Regola rename(String name) {
        return new Regola(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Regola rename(Name name) {
        return new Regola(name, null);
    }
}
